plugins {
    id 'application'
    id 'ch.fhnw.thga.frege' version '4.2.0-alpha'
    id 'java'
}

dependencies {
    implementation files(compileFrege.fregeCompilerJar)
}

frege {
    version     = '3.25.84'
    release     = '3.25alpha'
    mainModule  = 'ch.fhnw.fregels.Main' // see runFrege task
    replModule  = 'ch.fhnw.fregels.Main' // see replFrege task
    testModules = [
      'ch.fhnw.fregels.compile.CompileMakeMode'
    , 'ch.fhnw.fregels.compile.CompileNormalMode'
    , 'ch.fhnw.fregels.compile.inmemory.CompileInMemorySpec'
    , 'ch.fhnw.fregels.messages.exit.ExitSpec'
    , 'ch.fhnw.fregels.messages.initialize.InitializeSpec'
    , 'ch.fhnw.fregels.messages.textdocument.completion.CompletionSpec'
    , 'ch.fhnw.fregels.messages.textdocument.didchange.DidChangeSpec'
    , 'ch.fhnw.fregels.messages.GeneralLspTypesSpec'
    , 'ch.fhnw.fregels.rpc.RpcSpec'
    ]
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}


sourceSets {
    main {
        java {
            srcDirs += "$buildDir/classes/frege/main"
            // this allows us to compile all java sources in the Frege dir
            srcDirs += "src/main/frege"
        }
    }
}

application {
    mainClass = 'ch.fhnw.fregels.Main'
}


// run tests when compiling Frege code
compileFrege.dependsOn testFrege

// Make sure the generated sources are available before compiling Java
compileJava.dependsOn compileFrege

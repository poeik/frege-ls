module ch.fhnw.fregels.effects.MonadSendMessage where

import Control.monad.trans.MonadIO(MonadIO(liftIO))

import ch.fhnw.fregels.messages.MessageTypes(ServerMessage())
import ch.fhnw.fregels.rpc.Rpc(encodeMessage)
import ch.fhnw.fregels.AppM(AppM, AppStateM)

--- This effect enables to send a message from the server to the client 
class Monad m => MonadSendMessage m where
  sendServerMessage :: ServerMessage -> m ()

instance (Monad AppStateM) => MonadSendMessage AppM where
  sendServerMessage = liftIO . println . encodeMessage

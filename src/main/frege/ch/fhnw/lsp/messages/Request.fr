module ch.fhnw.lsp.rpc.Request where

import ch.fhnw.lsp.messages.initialize.model.InitializeRequest

import Data.JSON

data Request = InitializeRequest { 
  id          :: Maybe Int,
  params      :: InitializeRequestParams
} | InitializedRequest

data Method = Method String

instance FromJSON Request where
  fromJSON (Struct as) = do
    id     <- optional "id" as
    method <- field "method" as
    case method of 
      "initialize" -> do
        params <- field "params" as
        pure InitializeRequest { id, params }
      "initialized" -> do
        pure InitializedRequest
      unsupported -> do
        fail $ "Unsupported message with method \"" ++ unsupported ++ "\" received"
  fromJSON garbage = fail ("couldn't decode message from: " ++ show garbage)

instance FromJSON Method where
  fromJSON (Struct as) = do
    method <- field "method" as
    pure $ Method method
  fromJSON garbage = fail ("couldn't decode Method: " ++ show garbage)



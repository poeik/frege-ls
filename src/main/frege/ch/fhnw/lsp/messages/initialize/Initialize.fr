module ch.fhnw.lsp.messages.initialize.Initialize where

import ch.fhnw.lsp.env.LspEnv
import ch.fhnw.lsp.logger.Logger
import ch.fhnw.lsp.messages.initialize.model.InitializeRequest
import ch.fhnw.lsp.messages.initialize.model.InitializeResult

import Control.monad.trans.MonadIO

processInitializeMessage :: Logger -> InitializeRequestParams -> LspEnv InitializeResult
processInitializeMessage log (InitializeRequestParams pid client) = do
  case client of
    Just client -> do
      let version = maybe "" ((++) ", version ") client.version
      liftIO (log $ "Connected to " ++ client.name ++ version ++ " (PID: " ++ show pid ++ ")")
    otherwise -> liftIO $ log "Connected"
  pure $ InitializeResult ServerCapabilities (Just (ServerInfo "new Frege LSP" (Just $ "v0.0.1")))

module ch.fhnw.lsp.messages.initialize.Initialize where

import ch.fhnw.lsp.env.LspEnv
import ch.fhnw.lsp.logger.Logger
import ch.fhnw.lsp.messages.initialize.InitializeTypes

import Control.monad.trans.MonadIO

processInitializeMessage :: Logger -> InitializeRequestParams -> LspEnv InitializeResult
processInitializeMessage log (InitializeRequestParams pid client) = do
  liftIO $ log (logClientInfos pid client)
  pure $ InitializeResult (ServerCapabilities True) (Just (ServerInfo "new Frege LSP" (Just $ "v0.0.1")))

logClientInfos :: Int -> Maybe ClientInfo -> String
logClientInfos pid (Just client) =
  let 
    version = maybe "" ((++) ", version ") client.version 
  in "Connected to " ++ client.name ++ version ++ " (PID: " ++ show pid ++ ")"
logClientInfos pid _ = "Connected"

